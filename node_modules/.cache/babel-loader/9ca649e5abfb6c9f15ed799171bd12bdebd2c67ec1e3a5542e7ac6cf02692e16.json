{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export const counterSlice=createSlice({name:'counter',initialState:{value:0},reducers:{increment:state=>{// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes.\n// Also, no return statement is required from these functions.\nstate.value+=1;},decrement:state=>{state.value-=1;},incrementByAmount:(state,action)=>{state.value+=action.payload;}}});// Action creators are generated for each case reducer function\nexport const{increment,decrement,incrementByAmount}=counterSlice.actions;export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["C:/Users/HP/OneDrive/Desktop/Projects/Hostel_app/src/components/project_3/counterSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes.\r\n      // Also, no return statement is required from these functions.\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,MAAO,MAAM,CAAAC,YAAY,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,SAAS,CACfC,YAAY,CAAE,CACZC,KAAK,CAAE,CACT,CAAC,CACDC,QAAQ,CAAE,CACRC,SAAS,CAAGC,KAAK,EAAK,CACpB;AACA;AACA;AACA;AACA;AACAA,KAAK,CAACH,KAAK,EAAI,CAAC,CAClB,CAAC,CACDI,SAAS,CAAGD,KAAK,EAAK,CACpBA,KAAK,CAACH,KAAK,EAAI,CAAC,CAClB,CAAC,CACDK,iBAAiB,CAAEA,CAACF,KAAK,CAAEG,MAAM,GAAK,CACpCH,KAAK,CAACH,KAAK,EAAIM,MAAM,CAACC,OAAO,CAC/B,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEL,SAAS,CAAEE,SAAS,CAAEC,iBAAkB,CAAC,CAAGR,YAAY,CAACW,OAAO,CAE/E,cAAe,CAAAX,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}