{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"../../styles/table.css\"; \n\n// function Table() {\n//     const [rows, setRows] = useState(0);\n//     const [cols, setCols] = useState(0);\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newRow = parseInt(e.target.row.value);\n//         const newCol = parseInt(e.target.col.value);\n//         if (!isNaN(newRow) && !isNaN(newCol)) {\n//             setRows(newRow);\n//             setCols(newCol);\n//         }\n//     };\n\n//     // const generateTable = () => {\n//     //     const tableRows = [];\n//     //     let cellNumber = 1;\n//     //     for (let i = 0; i < rows; i++) {\n//     //         const rowCells = [];\n//     //         for (let j = 0; j < cols; j++) {\n//     //             rowCells.push(<td key={j}>{cellNumber++}</td>);\n//     //         }\n//     //         tableRows.push(<tr key={i}>{rowCells}</tr>);\n//     //     }\n//     //     return (\n//     //         <table className=\"generated-table\">\n//     //             <tbody>{tableRows}</tbody>\n//     //         </table>\n//     //     );\n//     // };\n//     const generateTable = (rows, cols) => {\n//         let cellNumber = 1;\n\n//         const tableRows = Array.from({ length: rows }).map((_, rowIndex) => {\n//             const rowCells = Array.from({ length: cols }).map((_, colIndex) => (\n//                 <td key={colIndex}>{cellNumber++}</td>\n//             ));\n//             return <tr key={rowIndex}>{rowCells}</tr>;\n//         });\n\n//         return (\n//             <table className=\"generated-table\">\n//                 <tbody>{tableRows}</tbody>\n//             </table>\n//         );\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <h1 className=\"title\">Table Generation</h1>\n//             <form onSubmit={handleSubmit} className=\"form\">\n//                 <label>Rows:</label>\n//                 <input type=\"number\" name=\"row\" />\n//                 <label>Columns:</label>\n//                 <input type=\"number\" name=\"col\" />\n//                 <button type=\"submit\">Generate Table</button>\n//             </form>\n//             {rows > 0 && cols > 0 && generateTable()}\n//         </div>\n//     );\n// }\n\n// export default Table;","map":{"version":3,"names":[],"sources":["C:/Users/HP/OneDrive/Desktop/Projects/Hostel_app/src/components/project_2/table.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"../../styles/table.css\"; \r\n\r\n// function Table() {\r\n//     const [rows, setRows] = useState(0);\r\n//     const [cols, setCols] = useState(0);\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const newRow = parseInt(e.target.row.value);\r\n//         const newCol = parseInt(e.target.col.value);\r\n//         if (!isNaN(newRow) && !isNaN(newCol)) {\r\n//             setRows(newRow);\r\n//             setCols(newCol);\r\n//         }\r\n//     };\r\n\r\n//     // const generateTable = () => {\r\n//     //     const tableRows = [];\r\n//     //     let cellNumber = 1;\r\n//     //     for (let i = 0; i < rows; i++) {\r\n//     //         const rowCells = [];\r\n//     //         for (let j = 0; j < cols; j++) {\r\n//     //             rowCells.push(<td key={j}>{cellNumber++}</td>);\r\n//     //         }\r\n//     //         tableRows.push(<tr key={i}>{rowCells}</tr>);\r\n//     //     }\r\n//     //     return (\r\n//     //         <table className=\"generated-table\">\r\n//     //             <tbody>{tableRows}</tbody>\r\n//     //         </table>\r\n//     //     );\r\n//     // };\r\n//     const generateTable = (rows, cols) => {\r\n//         let cellNumber = 1;\r\n        \r\n//         const tableRows = Array.from({ length: rows }).map((_, rowIndex) => {\r\n//             const rowCells = Array.from({ length: cols }).map((_, colIndex) => (\r\n//                 <td key={colIndex}>{cellNumber++}</td>\r\n//             ));\r\n//             return <tr key={rowIndex}>{rowCells}</tr>;\r\n//         });\r\n    \r\n//         return (\r\n//             <table className=\"generated-table\">\r\n//                 <tbody>{tableRows}</tbody>\r\n//             </table>\r\n//         );\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h1 className=\"title\">Table Generation</h1>\r\n//             <form onSubmit={handleSubmit} className=\"form\">\r\n//                 <label>Rows:</label>\r\n//                 <input type=\"number\" name=\"row\" />\r\n//                 <label>Columns:</label>\r\n//                 <input type=\"number\" name=\"col\" />\r\n//                 <button type=\"submit\">Generate Table</button>\r\n//             </form>\r\n//             {rows > 0 && cols > 0 && generateTable()}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Table;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}